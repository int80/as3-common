<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   addedEffect="Fade" showEffect="Fade" 
			   width="400" height="300" contentCreationComplete="_setup()" close="_closeHandler(event)"
			   >
	
	<fx:Declarations>
		<fx:Boolean id="centered">true</fx:Boolean>
	</fx:Declarations>
	
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import flash.utils.describeType;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.MoveEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.TitleWindow;
			
			private function _setup():void {
				// load dimensions
				if (! this.loadDimensions()) {
					//if (this.centered)
					//	PopUpManager.centerPopUp(this);
				}
				
				this.addEventListener(MoveEvent.MOVE, windowMoved);
			}
			
			protected function windowMoved(event:MoveEvent):void {
				if (x < 0) move(0, y);
				if (y < 0) move(x, 0);
				
				if (x + width > parent.width) move(parent.width - width, y);
				if (y + height > parent.height) move(x, parent.height - height);
			}
			
			private function getSharedObjectKey():String {
				// get this window's class name, use it to save location/dimensions
				var classInfo:XML = describeType(this);
				var className:String = classInfo.@name.toString();
				if (! className) {
					trace("Failed to load class name for window state");
					return null;
				}
				
				// make className alphanumeric
				className = className.replace('.', '_');
				className = className.replace('::', '_');
				
				return "windowState_" + className;
			}
			
			// load location and dimensions from sharedobject storage
			private function loadDimensions():Boolean {
				var savedState:SharedObject = getSharedObject();
				if (! savedState) return false;
				
				var savedLeft:Number = savedState.data.left;
				var savedTop:Number = savedState.data.top;
				var savedWidth:Number = savedState.data.width;
				var savedHeight:Number = savedState.data.height;
				
				// sanity check dimensions
				if (! savedLeft && ! savedTop)
					return false;
				if (! savedWidth || ! savedHeight)
					return false;
				if (savedWidth < 10 || savedHeight < 10)
					return false;
				
				// force dimensions to be within the current screen size
				var parentWidth:int = this.parentApplication.width;
				var parentHeight:int = this.parentApplication.height;
				if (savedLeft >= parentWidth - 10) return false;
				if (savedTop >= parentHeight - 10) return false;
				if (savedLeft + savedWidth >= parentWidth) return false;
				if (savedTop + savedHeight >= parentHeight) return false;
				
				this.x = savedLeft;
				this.y = savedTop;
				this.width = savedWidth;
				this.height = savedHeight;
				
				return true;
			}
			
			private function saveDimensions():void {
				var savedState:SharedObject = getSharedObject();
				if (! savedState) return;

				var bounds:Rectangle = this.getBounds(this.parent);
				
				savedState.data.left = bounds.left;
				savedState.data.top = bounds.top;
				savedState.data.width = bounds.width;
				savedState.data.height = bounds.height;
				savedState.flush();
			}
			
			private function getSharedObject():SharedObject {
				var className:String = this.getSharedObjectKey();
				if (! className) return null;
				
				var savedState:SharedObject;
				try {
					savedState = SharedObject.getLocal(className);
				} catch (error:Error) {
					trace("Unable to create SharedObject\n" + error.message);
				}
				
				return savedState;
			}
			
			private function _closeHandler(evt:CloseEvent):void {
				saveDimensions();
				postClose();
			}
			
			public function postClose():void {
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
</s:TitleWindow>
